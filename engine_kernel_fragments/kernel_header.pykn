kernel_header
0
void kernel TACHYON_ENGINE(global struct engineConfig* config, global struct engineResources* resources){
    private int IDX, IDY, global_ID;
    local struct engineConfig localConfig;
    struct voxel* thisVoxel;
    private struct voxel thisVoxelCopy;
    private uint toComputeX, toComputeY;


    localConfig = *config;


    toComputeX = localConfig.simulationWidth / get_global_size(0);
    toComputeY = localConfig.simulationHeight / get_global_size(1);
    for (private uint kernelIterator = 0; kernelIterator < toComputeX*toComputeY; kernelIterator++){
        IDX = get_global_id(0) * toComputeX + kernelIterator%toComputeX;
        IDY = get_global_id(1) * toComputeY + kernelIterator/toComputeX;
        global_ID = IDX + IDY * localConfig.simulationWidth;

        thisVoxel = &resources->worldMap->voxels[global_ID];
        thisVoxelCopy = *thisVoxel;
